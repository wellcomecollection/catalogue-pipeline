steps:
  - command: .buildkite/scripts/run_autoformat.py
    label: "autoformat"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py internal_model
    label: "internal model"

    # This will fail the build if internal model takes more than
    # 13 minutes to build and test.  This is to make sure we know if
    # the internal model compilation starts creeping again.
    #
    # We may increase this timeout, but we should do so intentionally.
    # We should only increase it when we know what's causing the slowness,
    # and we think it's an acceptable tradeoff.
    #
    # See https://buildkite.com/docs/pipelines/command-step
    timeout_in_minutes: 13
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py display_model
    label: "display model"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py source_model
    label: "source model"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py pipeline_storage
    label: "pipeline storage"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py ingestor_common
    label: "ingestor common"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_common
    label: "transformer common"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py calm_api_client
    label: "Calm API client"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py reindex_worker
    label: "reindex worker"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py ingestor_works
    label: "ingestor (works)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py ingestor_images
    label: "ingestor (images)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py id_minter
    label: "ID minter"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py relation_embedder
    label: "relation embedder"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py path_concatenator
    label: "path concatenator"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py router
    label: "router"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py batcher
    label: "batcher"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py matcher
    label: "matcher"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py merger
    label: "merger"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_miro
    label: "transformer (Miro)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_sierra
    label: "transformer (Sierra)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_mets
    label: "transformer (METS)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_calm
    label: "transformer (Calm)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py transformer_tei
    label: "transformer (TEI)"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py sierra_reader
    label: "Sierra reader"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py sierra_merger
    label: "Sierra merger"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py sierra_linker
    label: "Sierra linker"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py sierra_indexer
    label: "Sierra indexer"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py mets_adapter
    label: "METS adapter"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py calm_adapter
    label: "Calm adapter"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py calm_deletion_checker
    label: "Calm deletion checker"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py calm_indexer
    label: "Calm indexer"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py inference_manager
    label: "inference manager"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py tei_id_extractor
    label: "Tei id extractor"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py tei_adapter
    label: "Tei adapter"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py feature_inferrer --changes-in pipeline/inferrer/feature_inferrer
    label: "feature inferrer"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py palette_inferrer --changes-in pipeline/inferrer/palette_inferrer
    label: "palette inferrer"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_job.py aspect_ratio_inferrer --changes-in pipeline/inferrer/aspect_ratio_inferrer
    label: "aspect ratio inferrer"
    agents:
      queue: "scala"

  - command: .buildkite/scripts/run_lambda_job.py lambda
    label: "Lambdas"

  - wait

  - label: trigger adapter deployments
    if: build.branch == "main"
    trigger: "catalogue-pipeline-deploy-adapters"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"

  - label: trigger pipeline deployments
    if: build.branch == "main"
    trigger: "catalogue-pipeline-deploy-pipeline"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"

  - wait

  - command: .buildkite/scripts/tag_commit_as_latest.py
    if: build.branch == "main"
    label: "tag commit as latest"
    agents:
      queue: nano
