steps:
  - command: .buildkite/scripts/run_autoformat.py
    label: "autoformat"

  - command: .buildkite/scripts/run_job.py internal_model
    label: "internal model"

    # This will fail the build if internal model takes more than
    # 13 minutes to build and test.  This is to make sure we know if
    # the internal model compilation starts creeping again.
    #
    # We may increase this timeout, but we should do so intentionally.
    # We should only increase it when we know what's causing the slowness,
    # and we think it's an acceptable tradeoff.
    #
    # See https://buildkite.com/docs/pipelines/command-step
    timeout_in_minutes: 13

  - command: .buildkite/scripts/run_job.py source_model
    label: "source model"
  - command: .buildkite/scripts/run_job.py pipeline_storage
    label: "pipeline storage"
  - command: .buildkite/scripts/run_job.py ingestor_common
    label: "ingestor common"
  - command: .buildkite/scripts/run_job.py transformer_common
    label: "transformer common"
  - command: .buildkite/scripts/run_job.py calm_api_client
    label: "Calm API client"
  - command: .buildkite/scripts/run_lambda_job.py lambda
    label: "Lambdas"
  - command: .buildkite/scripts/run_job.py reindex_worker
    label: "reindex worker"
  - command: .buildkite/scripts/run_job.py ingestor_works
    label: "ingestor (works)"
  - command: .buildkite/scripts/run_job.py ingestor_images
    label: "ingestor (images)"
  - command: .buildkite/scripts/run_job.py id_minter
    label: "ID minter"
  - command: .buildkite/scripts/run_job.py relation_embedder
    label: "relation embedder"
  - command: .buildkite/scripts/run_job.py router
    label: "router"
  - command: .buildkite/scripts/run_job.py batcher
    label: "batcher"
  - command: .buildkite/scripts/run_job.py matcher
    label: "matcher"
  - command: .buildkite/scripts/run_job.py merger
    label: "merger"
  - command: .buildkite/scripts/run_job.py transformer_miro
    label: "transformer (Miro)"
  - command: .buildkite/scripts/run_job.py transformer_sierra
    label: "transformer (Sierra)"
  - command: .buildkite/scripts/run_job.py transformer_mets
    label: "transformer (METS)"
  - command: .buildkite/scripts/run_job.py transformer_calm
    label: "transformer (Calm)"
  - command: .buildkite/scripts/run_job.py transformer_tei
    label: "transformer (Tei)"
  - command: .buildkite/scripts/run_job.py sierra_reader
    label: "Sierra reader"
  - command: .buildkite/scripts/run_job.py sierra_merger
    label: "Sierra merger"
  - command: .buildkite/scripts/run_job.py sierra_linker
    label: "Sierra linker"
  - command: .buildkite/scripts/run_job.py sierra_indexer
    label: "Sierra indexer"
  - command: .buildkite/scripts/run_job.py mets_adapter
    label: "METS adapter"
  - command: .buildkite/scripts/run_job.py calm_adapter
    label: "Calm adapter"
  - command: .buildkite/scripts/run_job.py calm_deletion_checker
    label: "Calm deletion checker"
  - command: .buildkite/scripts/run_job.py calm_indexer
    label: "Calm indexer"
  - command: .buildkite/scripts/run_job.py inference_manager
    label: "inference manager"
  - command: .buildkite/scripts/run_job.py tei_id_extractor
    label: "Tei id extractor"
  - command: .buildkite/scripts/run_job.py tei_adapter
    label: "Tei adapter"
  - command: .buildkite/scripts/run_job.py feature_inferrer --changes-in pipeline/inferrer/feature_inferrer
    label: "feature inferrer"
  - command: .buildkite/scripts/run_job.py palette_inferrer --changes-in pipeline/inferrer/palette_inferrer
    label: "palette inferrer"
  - command: .buildkite/scripts/run_job.py aspect_ratio_inferrer --changes-in pipeline/inferrer/aspect_ratio_inferrer
    label: "aspect ratio inferrer"

  - wait

  - label: publish internal model
    if: build.branch == "main"
    env:
      PROJECTS: internal_model
    command: .buildkite/scripts/publish.py

  - label: trigger adapter deployments
    if: build.branch == "main"
    trigger: "catalogue-pipeline-deploy-adapters"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"

  - label: trigger pipeline deployments
    if: build.branch == "main"
    trigger: "catalogue-pipeline-deploy-pipeline"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"

  - wait

  - command: .buildkite/scripts/tag_commit_as_latest.py
    if: build.branch == "main"
    label: "tag commit as latest"
    agents:
      queue: nano
